# Docker Configuration for Spring Boot
spring.profiles.active=docker

# Database Configuration (H2 for Docker)
spring.datasource.url=jdbc:h2:mem:petparadisedb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Server Configuration
server.port=8080
server.servlet.context-path=/api/v1

# CORS Configuration for Docker networking
spring.web.cors.allowed-origins=http://localhost:5173,http://localhost:3000,http://frontend:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Logging Configuration
logging.level.com.petparadise=INFO
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Application Info
info.app.name=Pet Paradise Backend (Docker)
info.app.description=REST API for Pet Paradise Application running in Docker
info.app.version=1.0.0
